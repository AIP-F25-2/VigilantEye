name: Deploy to Azure

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: vigilanteye-api-prod
  AZURE_RESOURCE_GROUP: vigilanteye-rg
  CONTAINER_REGISTRY: vigilanteyeregistry.azurecr.io
  IMAGE_NAME: vigilanteye-api

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        # Add your test commands here
        echo "Running tests..."

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push Docker image
      run: |
        # Build Docker image
        docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -t ${{ env.IMAGE_NAME }}:latest .
        
        # Login to Azure Container Registry
        az acr login --name ${{ env.CONTAINER_REGISTRY }}
        
        # Tag and push images
        docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker tag ${{ env.IMAGE_NAME }}:latest ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
        images: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Run database migrations
      run: |
        # Get the app service URL
        APP_URL=$(az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query defaultHostName -o tsv)
        
        # Run migrations via Azure CLI
        az webapp ssh --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --command "flask db upgrade"

    - name: Health check
      run: |
        # Wait for deployment to complete
        sleep 30
        
        # Get the app service URL
        APP_URL=$(az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --query defaultHostName -o tsv)
        
        # Test health endpoint
        curl -f https://$APP_URL/health || exit 1
        echo "Deployment successful! API is running at https://$APP_URL"
